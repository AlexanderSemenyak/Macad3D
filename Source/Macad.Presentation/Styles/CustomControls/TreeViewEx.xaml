<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:mmp="clr-namespace:Macad.Presentation"
                    xmlns:treeview="clr-namespace:Macad.Presentation.TreeView">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type treeview:EditTextBox}">
        <Setter Property="Foreground" Value="{StaticResource Macad.Brushes.TextBox.Text}" />
        <Setter Property="Background" Value="{StaticResource Macad.Brushes.TextBox.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource Macad.Brushes.TextBox.Border}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <StackPanel Orientation="Horizontal">
                        <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="PART_ContentHost"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd"
                                    Value="{StaticResource Macad.Brushes.TextBox.Disabled.Background}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Macad.Brushes.TextBox.Disabled.Text}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type treeview:TreeViewExItem}" x:Key="Macad.Styles.TreeViewExItem.Base">
        <Setter Property="Background" Value="AliceBlue"/>
        <Setter Property="Control.HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl, AncestorLevel=1}, FallbackValue=Left}" />
        <Setter Property="Control.VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl, AncestorLevel=1}, FallbackValue=Center}" />
        <Setter Property="Control.Padding" Value="1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="FrameworkElement.FocusVisualStyle">
            <Setter.Value>
                <Style TargetType="{x:Type IFrameworkInputElement}">
                    <Style.Resources>
                        <ResourceDictionary />
                    </Style.Resources>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type treeview:TreeViewExItem}">
                    <StackPanel Background="Transparent" x:Name="stacki">
                        <Border x:Name="border"
						    BorderThickness="1" 
                            Padding="{TemplateBinding Control.Padding}"
                            SnapsToDevicePixels="True"
                            CornerRadius="2" VerticalAlignment="Center" Margin="1,0,1,0">
                            <DockPanel x:Name="ct" >
                                <FrameworkElement DockPanel.Dock="Left" Margin="{Binding Offset, RelativeSource={RelativeSource TemplatedParent}, Converter={mmp:DoubleToThicknessLeftConverter}}"/>
                                <ToggleButton DockPanel.Dock="Left" 
                                    IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type treeview:TreeViewExItem}},Path=IsExpanded,FallbackValue=False}"
                                    Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type treeview:TreeViewExItem}},Path=HasItems, Converter={mmp:BoolToVisibleHiddenConverter},FallbackValue=Hidden}"
                                    ClickMode="Press" Name="Expander" HorizontalAlignment="Right">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Style.Resources>
                                                <ResourceDictionary />
                                            </Style.Resources>
                                            <Setter Property="UIElement.Focusable" Value="False" />
                                            <Setter Property="FrameworkElement.Width" Value="16" />
                                            <Setter Property="FrameworkElement.Height" Value="16" />
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Border Padding="5" Background="#00FFFFFF" Width="16" Height="16" SnapsToDevicePixels="True">
                                                            <Path Fill="Transparent" Stroke="{StaticResource Macad.Brushes.Glyph}" Name="ExpandPath">
                                                                <Path.Data>
                                                                    <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                                </Path.Data>
                                                                <Path.RenderTransform>
                                                                    <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                                <Setter Property="Shape.Stroke" TargetName="ExpandPath" Value="Black" />
                                                                <Setter Property="Shape.Fill" TargetName="ExpandPath" Value="Transparent" />
                                                            </Trigger>
                                                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                                <Setter Property="UIElement.RenderTransform" TargetName="ExpandPath">
                                                                    <Setter.Value>
                                                                        <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="Shape.Fill" TargetName="ExpandPath" 
                                                                        Value="{StaticResource Macad.Brushes.Glyph}" />
                                                                <!--<Setter Property="Shape.Stroke" TargetName="ExpandPath">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush>#FFc8c8c8</SolidColorBrush>
                                                                    </Setter.Value>
                                                                </Setter>-->
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <ContentPresenter x:Name="content"
                                    FocusManager.IsFocusScope="True" 
                                    Content="{TemplateBinding HeaderedContentControl.Header}"
                                    ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                    ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                    ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                    ContentSource="Header"
                                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </DockPanel>
                        </Border>
                        <ItemsPresenter x:Name="itemsPresenter" Visibility="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Converter={mmp:BoolToVisibleCollapsedConverter}, FallbackValue=Hidden}"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="border">
                            <Setter Property="Control.Background" TargetName="border"
                                    Value="{Binding BackgroundHovered, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type treeview:TreeViewExItem}, AncestorLevel=1}}" />
                            <Setter Property="Border.BorderBrush" TargetName="border"
                                    Value="{Binding BorderBrushHovered, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type treeview:TreeViewExItem}, AncestorLevel=1}}" />
                        </Trigger>
                        <Trigger Property="treeview:TreeViewExItem.IsSelected" Value="True">
                            <Setter Property="Control.Background" TargetName="border"
                                    Value="{Binding BackgroundSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type treeview:TreeViewExItem}, AncestorLevel=1}}" />
                            <Setter Property="Border.BorderBrush" TargetName="border"
                                    Value="{Binding BorderBrushSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type treeview:TreeViewExItem}, AncestorLevel=1}}" />
                            <!--<Setter Property="Control.Foreground" TargetName="content"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />-->
                        </Trigger>
                        <Trigger Property="treeview:TreeViewExItem.IsFocused" Value="True">
                            <Setter Property="Border.BorderBrush" TargetName="border"
                                    Value="{Binding BorderBrushFocused, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type treeview:TreeViewExItem}, AncestorLevel=1}}" />
                            <Setter Property="Control.Background" TargetName="border"
                                    Value="{Binding BackgroundFocused, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type treeview:TreeViewExItem}, AncestorLevel=1}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="treeview:TreeViewExItem.IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Border.BorderBrush" TargetName="border"
                                    Value="{Binding BorderBrushSelectedHovered, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type treeview:TreeViewExItem}, AncestorLevel=1}}" />
                            <Setter Property="Control.Background" TargetName="border"
                                    Value="{Binding BackgroundSelectedHovered, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type treeview:TreeViewExItem}, AncestorLevel=1}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="treeview:TreeViewExItem.IsFocused" Value="True" />
                                <Condition Property="treeview:TreeViewExItem.IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Border.BorderBrush" TargetName="border"
                                    Value="{Binding BorderBrushFocusedSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type treeview:TreeViewExItem}, AncestorLevel=1}}" />
                            <Setter Property="Control.Background" TargetName="border"
                                    Value="{Binding BackgroundFocusedSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type treeview:TreeViewExItem}, AncestorLevel=1}}" />
                        </MultiTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                        Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=IsActive, FallbackValue=False}"
                                        Value="False" />
                                <Condition
                                        Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsSelected}"
                                        Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Border.BorderBrush" TargetName="border"
                                    Value="{Binding BorderBrushInactive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type treeview:TreeViewExItem}, AncestorLevel=1}}" />
                            <Setter Property="Control.Background" TargetName="border"
                                    Value="{Binding BackgroundInactive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type treeview:TreeViewExItem}, AncestorLevel=1}}" />
                        </MultiDataTrigger>

                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{StaticResource Macad.Brushes.TextBox.Disabled.Text}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="content">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{StaticResource Macad.Brushes.TextBox.Disabled.Text}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="treeview:TreeViewExItem.IsCurrentDropTarget" Value="True">
                            <Setter Property="Control.Background" TargetName="border"
                                    Value="{Binding BackgroundSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type treeview:TreeViewExItem}, AncestorLevel=1}}" />
                            <Setter Property="Border.BorderBrush" TargetName="border"
                                    Value="{Binding BorderBrushSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type treeview:TreeViewExItem}, AncestorLevel=1}}" />
                        </Trigger>
                        <Trigger Property="treeview:TreeViewExItem.IsEditing" Value="True">
                            <Setter TargetName="content" Property="ContentPresenter.ContentTemplate" 
                                    Value="{Binding TemplateEdit, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type treeview:TreeViewExItem}, AncestorLevel=1}}"/>
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="Control.Background"
                                    Value="{Binding BackgroundSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type treeview:TreeViewExItem}, AncestorLevel=1}}" />
                            <Setter Property="Border.BorderBrush"
                                    Value="{Binding BorderBrushSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type treeview:TreeViewExItem}, AncestorLevel=1}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type treeview:TreeViewExItem}" BasedOn="{StaticResource Macad.Styles.TreeViewExItem.Base}">
        <Setter Property="BorderBrushFocusedSelected" Value="{StaticResource Macad.Brushes.ListView.SelectedFocused.Border}" />
        <Setter Property="BackgroundFocusedSelected" Value="{StaticResource Macad.Brushes.ListView.SelectedFocused.Background}" />

        <Setter Property="BorderBrushSelectedHovered" Value="{StaticResource Macad.Brushes.ListView.SelectedMouseOver.Border}" />
        <Setter Property="BackgroundSelectedHovered" Value="{StaticResource Macad.Brushes.ListView.SelectedMouseOver.Background}" />

        <Setter Property="BorderBrushFocused" Value="{StaticResource Macad.Brushes.ListView.Focused.Border}" />
        <Setter Property="BackgroundFocused" Value="{StaticResource Macad.Brushes.ListView.Focused.Background}" />

        <Setter Property="BorderBrushSelected" Value="{StaticResource Macad.Brushes.ListView.Selected.Border}" />
        <Setter Property="BackgroundSelected" Value="{StaticResource Macad.Brushes.ListView.Selected.Border}" />

        <Setter Property="BorderBrushHovered" Value="{StaticResource Macad.Brushes.ListView.MouseOver.Border}" />
        <Setter Property="BackgroundHovered" Value="{StaticResource Macad.Brushes.ListView.MouseOver.Background}" />

        <Setter Property="BorderBrushInactive" Value="{StaticResource Macad.Brushes.ListView.Disabled.Border}" />
        <Setter Property="BackgroundInactive" Value="{StaticResource Macad.Brushes.ListView.Focused.Background}" />
    </Style>
    
    <Style TargetType="{x:Type treeview:TreeViewEx}">
        <Setter Property="InsertTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DockPanel Background="{TemplateBinding Panel.Background}" HorizontalAlignment="Stretch">
                        <Polygon Points="0,0 10,5 0,10" Fill="{Binding InsertionMarkerBrush}" DockPanel.Dock="Left"/>
                        <Polygon Points="0,0 -10,5 0,10" Fill="{Binding InsertionMarkerBrush}" DockPanel.Dock="Right" Margin="0,0,2,0"/>
                        <Rectangle Fill="{Binding InsertionMarkerBrush}" Height="1" DockPanel.Dock="Left"/>
                    </DockPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background" Value="{StaticResource Macad.Brushes.ListView.Background}" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="False" />
        <Setter Property="Border.BorderBrush" Value="#FF828790" />
        <Setter Property="Border.BorderThickness" Value="1" />
        <Setter Property="Control.Padding" Value="1" />
        <Setter Property="TextElement.Foreground">
            <Setter.Value>
                <DynamicResource ResourceKey="{StaticResource Macad.Colors.ListView.Text}" />
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility">
            <Setter.Value>
                <x:Static Member="ScrollBarVisibility.Auto" />
            </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility">
            <Setter.Value>
                <x:Static Member="ScrollBarVisibility.Auto" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.VerticalContentAlignment">
            <Setter.Value>
                <x:Static Member="VerticalAlignment.Center" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type treeview:TreeViewEx}">
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                            BorderBrush="{TemplateBinding Border.BorderBrush}" Name="Bd" SnapsToDevicePixels="True">
                        <ScrollViewer CanContentScroll="True" x:Name="scroller"
                                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                Background="{TemplateBinding Panel.Background}"
                                Padding="{TemplateBinding Control.Padding}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" 
                                Focusable="False">
                            <ItemsPresenter x:Name="content" DockPanel.Dock="Top" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="Panel.Background" TargetName="Bd">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{TemplateBinding Panel.Background}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>